---

extra_includes:
- pybind11/stl.h

attributes:
  kInvalidHandle:
    ignore: true
  kHandleTypeEvent:
    ignore: true
  kHandleTypeSemaphore:
    ignore: true
  kHandleTypeCSBase:
    ignore: true
  kHandleTypeNTBase:
    ignore: true
  kHandleTypeHALBase:
    ignore: true
  kHandleTypeUserBase:
    ignore: true
functions:
  CreateEvent:
    subpackage: sync
  DestroyEvent:
    subpackage: sync
  SetEvent:
    subpackage: sync
  ResetEvent: 
    subpackage: sync
  CreateSemaphore:
    subpackage: sync
  DestroySemaphore:
    subpackage: sync
  ReleaseSemaphore:
    subpackage: sync
    param_override:
      prevCount:
        default: "0"
  WaitForObject:
    overloads:
      WPI_Handle:
        subpackage: sync
      WPI_Handle, double, bool*:
        subpackage: sync
  WaitForObjects:
    overloads:
      std::span<const WPI_Handle>, std::span<WPI_Handle>:
        subpackage: sync
        param_override:
          signaled:
            ignore: true
        cpp_code: |
          [](std::span<const WPI_Handle> handles) {
            py::gil_scoped_release release;
            std::vector<WPI_Handle> signaled(handles.size());
            auto result = wpi::WaitForObjects(handles, signaled);
            signaled.resize(result.size());
            return signaled;
          }
      std::initializer_list<WPI_Handle>, std::span<WPI_Handle>:
        ignore: true
      std::span<const WPI_Handle>, std::span<WPI_Handle>, double, bool*:
        subpackage: sync
        param_override:
          signaled:
            ignore: true
          timedOut:
            ignore: true
        cpp_code: |
          [](std::span<const WPI_Handle> handles, double timeout) {
            py::gil_scoped_release release;
            std::vector<WPI_Handle> signaled(handles.size());
            bool timedOut = false;
            auto result = wpi::WaitForObjects(handles, signaled, timeout, &timedOut);
            signaled.resize(result.size());
            return std::make_tuple(signaled, timedOut);
          }
      std::initializer_list<WPI_Handle>, std::span<WPI_Handle>, double, bool*:
        ignore: true
  CreateSignalObject:
    subpackage: sync
  SetSignalObject:
    subpackage: sync
  ResetSignalObject:
    subpackage: sync
  DestroySignalObject:
    subpackage: sync
  WPI_CreateEvent:
    ignore: true
  WPI_DestroyEvent:
    ignore: true
  WPI_SetEvent:
    ignore: true
  WPI_ResetEvent:
    ignore: true
  WPI_CreateSemaphore:
    ignore: true
  WPI_DestroySemaphore:
    ignore: true
  WPI_ReleaseSemaphore:
    ignore: true
  WPI_WaitForObject:
    ignore: true
  WPI_WaitForObjectTimeout:
    ignore: true
  WPI_WaitForObjects:
    ignore: true
  WPI_WaitForObjectsTimeout:
    ignore: true
  WPI_CreateSignalObject:
    ignore: true
  WPI_SetSignalObject:
    ignore: true
  WPI_ResetSignalObject:
    ignore: true
  WPI_DestroySignalObject:
    ignore: true
classes:
  Event:
    ignore: true
    methods:
      Event:
      GetHandle:
      Set:
      Reset:
  Semaphore:
    ignore: true
    methods:
      Semaphore:
      GetHandle:
      Release:
  SignalObject:
    ignore: true
    methods:
      SignalObject:
      GetHandle:
      Set:
      Reset:
